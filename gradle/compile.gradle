/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'java'

/* define the valid syntax level for source files */
sourceCompatibility = JavaVersion.VERSION_11
/* define binary compatibility version */
targetCompatibility = JavaVersion.VERSION_11

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    implementation.setCanBeResolved(true)
    api.setCanBeResolved(true)

    integrationTestCompile.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

tasks.withType(JavaCompile) {
    options.compilerArgs += [
        "-Xlint:unchecked",
        "-Xlint:cast",
        "-Xlint:auxiliaryclass",
        "-Xlint:deprecation",
        "-Xlint:dep-ann",
        "-Xlint:divzero",
        "-Xlint:empty",
        "-Xlint:exports",
        "-Xlint:fallthrough",
        "-Xlint:finally",
        "-Xlint:module",
        "-Xlint:opens",
        "-Xlint:options",
        "-Xlint:overloads",
        "-Xlint:overrides",
        "-Xlint:path",
        "-Xlint:processing",
        "-Xlint:removal",
        "-Xlint:requires-automatic",
        "-Xlint:requires-transitive-automatic",
        "-Xlint:try",
        "-Xlint:varargs",
        "-Xlint:preview",
        "-Xlint:static",
        // "-Werror" // TODO: @vidakovic fix this
    ]
    // TODO FINERACT-959 (gradually) enable -Xlint:all (see "javac -help -X")

    options.deprecation = true

    options.compilerArgs +=[
        "-Xmaxwarns",
        1500,
        "-Xmaxerrs",
        1500
    ]
}
